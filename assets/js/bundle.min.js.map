{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/es6/main.js","src/es6/simulation.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_simulation","$","createPulse","x","y","pulse","svg","append","attr","style","transition","duration","ease","d3","easeCubicOut","window","setTimeout","interrupt","remove","pulseDuration","updateSimControls","_simulation2","default","isRunning","removeClass","addClass","reset","sliderPertX","slider","sliderPertY","sliderSpeed","sliderDamp","showOverlay","hideOverlay","on","event","detail","nid","formatter","value","tooltip","data","setParamSpeed","newValue","setParamDamp","setParamPertX","setParamPertY","ev","stop","start","preventDefault","randomState","target","hasClass","aboutID","Simulation","startSim","defaultIsRunning","stopSim","resetNetwork","base_frequency","setParameters","damp_modifier","pert","Math","PI"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global svg, d3, clicked, x, y */\nimport Simulation from './simulation';\n\n$(() => {\n  /**\n   * Create feedback pulse when nodes are clicked\n   */\n\n  function createPulse(x, y) {\n    const pulseDuration = 1000;\n    const pulse = svg.append('circle')\n      .attr('r', 0)\n      .attr('cx', x)\n      .attr('cy', y)\n      .style('pointer-events', 'none')\n      .style('fill', 'rgba(240, 85, 42, 1)'); // #f0552a\n    pulse.transition()\n      .duration(pulseDuration)\n      .ease(d3.easeCubicOut)\n      .attr('r', 100)\n      .style('fill', 'rgba(240, 85, 42, 0)'); // #f0552a\n    window.setTimeout(() => {\n      pulse.interrupt().remove();\n    }, pulseDuration * 1.2);\n  }\n\n  svg.on('nodePerturbed', () => {\n    createPulse(x[d3.event.detail.nid], y[d3.event.detail.nid]);\n  });\n\n  /**\n   * Setup sliders\n   */\n  const sliderSpeed = $('.slider#speed_val').slider({\n    formatter: value => `${value} Hz`,\n    tooltip: 'always',\n  });\n  const sliderDamp = $('.slider#damp_val').slider({\n    formatter: value => value,\n    tooltip: 'always',\n  });\n\n  const sliderPertX = $('.slider#xpert_val').slider({\n    formatter: (value) => {\n      if (value === 1) {\n        return 'π';\n      } else if (value === -1) {\n        return '-π';\n      } else if (value === 0) {\n        return '0';\n      }\n      return `${value} π`;\n    },\n    tooltip: 'always',\n  });\n  const sliderPertY = $('.slider#ypert_val').slider({\n    formatter: value => `${value} Hz`,\n    tooltip: 'always',\n  });\n\n  sliderSpeed.slider('on', 'change', (data) => {\n    Simulation.setParamSpeed(data.newValue);\n  });\n\n  sliderDamp.slider('on', 'change', (data) => {\n    Simulation.setParamDamp(data.newValue);\n  });\n\n  sliderPertX.slider('on', 'change', (data) => {\n    Simulation.setParamPertX(data.newValue);\n  });\n\n  sliderPertY.slider('on', 'change', (data) => {\n    Simulation.setParamPertY(data.newValue);\n  });\n\n  /**\n   * Sim controls\n   *\n   */\n  function updateSimControls() {\n    if (Simulation.isRunning()) {\n      $('body')\n        .removeClass('sim-off')\n        .addClass('sim-on');\n    } else {\n      $('body')\n        .removeClass('sim-on')\n        .addClass('sim-off');\n    }\n  }\n\n  function reset() {\n    sliderPertX.slider('setValue', 0.1, true, true);\n    sliderPertY.slider('setValue', 0.1, true, true);\n    sliderSpeed.slider('setValue', 42, true, true);\n    sliderDamp.slider('setValue', 1, true, true);\n    Simulation.reset();\n  }\n\n  $('[data-control=play-pause]').on('click', (ev) => {\n    if (Simulation.isRunning()) {\n      Simulation.stop();\n    } else {\n      Simulation.start();\n    }\n    updateSimControls();\n    ev.preventDefault();\n  });\n\n  $('[data-control=reset]').on('click', (ev) => {\n    reset();\n    ev.preventDefault();\n  });\n\n  $('[data-control=random]').on('click', (ev) => {\n    Simulation.randomState();\n    ev.preventDefault();\n  });\n\n  sliderPertX.slider('setValue', 0.1, true, true);\n  sliderPertY.slider('setValue', 0.1, true, true);\n  Simulation.setParamPertX(0.1);\n  Simulation.setParamPertY(0.1);\n  updateSimControls();\n\n  /**\n   * \"About\"/Learn more buttons\n   */\n  $('.button-about').on('click', (ev) => {\n    if (!$(ev.target).hasClass('selected')) {\n      $('.button-about').removeClass('selected');\n      $(ev.target).addClass('selected');\n      $('.about-text').removeClass('visible');\n      const aboutID = $(ev.target).attr('data-about');\n      $(`.about-text#${aboutID}`).addClass('visible');\n    }\n    ev.preventDefault();\n  });\n\n  /**\n   * Overlay\n   */\n  function showOverlay() {\n    $('.overlay-info').addClass('overlay-visible');\n  }\n\n  function hideOverlay() {\n    $('.overlay-info').removeClass('overlay-visible');\n  }\n\n  $('.overlay').on('click', (ev) => {\n    hideOverlay();\n    ev.preventDefault();\n  });\n\n  $('.overlay-close').on('click', (ev) => {\n    hideOverlay();\n    ev.preventDefault();\n  });\n\n  $('[data-control=info]').on('click', (ev) => {\n    showOverlay();\n    ev.preventDefault();\n  });\n\n  /**\n   * Disable dragging of buttons\n   */\n  $('.btn, .button').on('dragstart', () => false);\n});\n","/* global simWorker, startSim, stopSim, resetNetwork, setParameters, randomState */\n/* global base_frequency, damp_modifier, pert */\n\n/**\n * Interface for encapsulating global/dirty calls to the original simulation code\n * without modifying it.\n *\n * NOTE: Right now the simulation produces no events if it's stopped and provides no way\n * to know if it's running, both of which would be necessary to correctly implement this\n * control. However, the internal variable that indicates if it's running is only modified\n * through calling the stop/start functions that are only called through the original\n * buttons being replaced. But let's be careful with that...\n */\nexport default class Simulation {\n  static start() {\n    startSim();\n    Simulation.defaultIsRunning = true;\n  }\n\n  static stop() {\n    stopSim();\n    Simulation.defaultIsRunning = false;\n  }\n\n  static reset() {\n    resetNetwork();\n  }\n\n  static isRunning() {\n    return Simulation.defaultIsRunning;\n  }\n\n  static setParamSpeed(value) {\n    base_frequency = 50. - +value; // eslint-disable-line\n    setParameters();\n  }\n\n  static setParamDamp(value) {\n    damp_modifier = +value; // eslint-disable-line\n    setParameters();\n  }\n\n  static setParamPertX(value) {\n    pert.x = +value * Math.PI;\n  }\n\n  static setParamPertY(value) {\n    pert.y = +value;\n  }\n\n  static randomState() {\n    randomState();\n  }\n}\n\n// Simulation starts on\nSimulation.defaultIsRunning = true;\n"]}